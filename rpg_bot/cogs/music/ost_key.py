import enum
import typing


class OSTKeyInfo:
    def __init__(self, name: str, desc=None, emoji=None):
        self.name = name
        self.desc = desc
        self.emoji = emoji


class OSTKey(enum.Enum):
    A = OSTKeyInfo("ApariÃ§Ã£o", emoji="ðŸ‡¦",
                   desc="OST's para quando algum personagem mais importante aparecer")
    C = OSTKeyInfo("Combate", emoji="ðŸ‡¨",
                   desc="OST's para quando os jogadores entrarem em combate")
    D = OSTKeyInfo("Drama", emoji="ðŸ‡©",
                   desc="OST's para quando algum personagem estiver perto de morrer ou alguma situaÃ§Ã£o de risco")
    E = OSTKeyInfo("ExploraÃ§Ã£o", emoji="ðŸ‡ª",
                   desc="OST's para quando os jogadores estiverem explorando")
    F = OSTKeyInfo("Finalizando", emoji="ðŸ‡«",
                   desc="OST's para quando a sessÃ£o estiver chegando ao seu final")
    H = OSTKeyInfo("HerÃ³ica", emoji="ðŸ‡­",
                   desc="OST's para um momento HerÃ³ico")
    I = OSTKeyInfo("Iniciando", emoji="ðŸ‡®",
                   desc="OST's para inÃ­cio da sessÃ£o")
    L = OSTKeyInfo("LamentÃ¡vel", emoji="ðŸ‡±",
                   desc="OST's para quando algum momento mais emocionante estiver acontecendo")
    Q = OSTKeyInfo("Quimera", emoji="ðŸ‡¶",
                   desc="OST's para encontro com quimeras")
    T = OSTKeyInfo("Terror", emoji="ðŸ‡¹",
                   desc="OST's para momentos de terror e/ou assustadores")
    R = OSTKeyInfo("RevelaÃ§Ã£o", emoji="ðŸ‡·",
                   desc="OST's para momentos de revelaÃ§Ã£o")

    @classmethod
    def from_str(cls, value: str):
        for k in cls:
            if value.upper() == str(k.name):
                return k
        return None


class KeyIndex(typing.NamedTuple):
    key: typing.Optional[OSTKey]
    index: int
